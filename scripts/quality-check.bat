@echo off
setlocal enabledelayedexpansion

REM ============================================
REM BIP API - Script de An√°lise de Qualidade
REM ============================================

echo üîß Iniciando an√°lise completa de qualidade de c√≥digo...
echo.

REM Fun√ß√£o para mostrar status
:show_status
if %1 equ 0 (
    echo ‚úÖ %~2
) else (
    echo ‚ùå %~2
    exit /b 1
)
goto :eof

REM Limpar compila√ß√µes anteriores
echo üßπ Limpando compila√ß√µes anteriores...
call mvn clean >nul 2>&1
call :show_status %errorlevel% "Limpeza conclu√≠da"

REM Compilar o projeto
echo üî® Compilando o projeto...
call mvn compile -q
call :show_status %errorlevel% "Compila√ß√£o conclu√≠da"

REM Executar testes
echo üß™ Executando testes unit√°rios...
call mvn test -q
set TESTS_RESULT=%errorlevel%
if %TESTS_RESULT% equ 0 (
    call :show_status %TESTS_RESULT% "Testes executados com sucesso"
) else (
    call :show_status %TESTS_RESULT% "Falha nos testes unit√°rios"
)

REM CheckStyle
echo ‚úÖ Executando CheckStyle...
call mvn checkstyle:check -q
set CHECKSTYLE_RESULT=%errorlevel%
if %CHECKSTYLE_RESULT% equ 0 (
    call :show_status %CHECKSTYLE_RESULT% "CheckStyle passou sem viola√ß√µes"
) else (
    echo ‚ö†Ô∏è  CheckStyle encontrou viola√ß√µes (verificar target\checkstyle-result.xml)
)

REM PMD
echo üîç Executando PMD...
call mvn pmd:check -q
set PMD_RESULT=%errorlevel%
if %PMD_RESULT% equ 0 (
    call :show_status %PMD_RESULT% "PMD passou sem problemas"
) else (
    echo ‚ö†Ô∏è  PMD encontrou issues (verificar target\pmd.xml)
)

REM CPD (Copy-Paste Detector)
echo üìã Executando CPD (detec√ß√£o de duplica√ß√£o)...
call mvn pmd:cpd-check -q
set CPD_RESULT=%errorlevel%
if %CPD_RESULT% equ 0 (
    call :show_status %CPD_RESULT% "CPD n√£o encontrou duplica√ß√µes"
) else (
    echo ‚ö†Ô∏è  CPD encontrou c√≥digo duplicado (verificar target\cpd.xml)
)

REM SpotBugs
echo üêõ Executando SpotBugs...
call mvn spotbugs:check -q
set SPOTBUGS_RESULT=%errorlevel%
if %SPOTBUGS_RESULT% equ 0 (
    call :show_status %SPOTBUGS_RESULT% "SpotBugs n√£o encontrou bugs"
) else (
    echo ‚ö†Ô∏è  SpotBugs encontrou poss√≠veis bugs (verificar target\spotbugsXml.xml)
)

REM JaCoCo Coverage
echo üìà Gerando relat√≥rio de cobertura...
call mvn jacoco:report -q
set JACOCO_RESULT=%errorlevel%
call :show_status %JACOCO_RESULT% "Relat√≥rio de cobertura gerado"

REM Verificar cobertura m√≠nima
echo üéØ Verificando cobertura m√≠nima...
call mvn jacoco:check -q
set COVERAGE_CHECK=%errorlevel%
call :show_status %COVERAGE_CHECK% "Cobertura atende aos requisitos m√≠nimos (95%%)"

REM Gerar site com todos os relat√≥rios
echo üåê Gerando site com relat√≥rios...
call mvn site -Pquality -q
set SITE_RESULT=%errorlevel%
call :show_status %SITE_RESULT% "Site com relat√≥rios gerado"

REM Resumo final
echo.
echo ======================================
echo üìä RESUMO DA AN√ÅLISE DE QUALIDADE
echo ======================================

if %TESTS_RESULT% equ 0 (
    echo üß™ Testes: PASSOU
) else (
    echo üß™ Testes: FALHOU
)

if %CHECKSTYLE_RESULT% equ 0 (
    echo ‚úÖ CheckStyle: PASSOU
) else (
    echo ‚úÖ CheckStyle: AVISOS
)

if %PMD_RESULT% equ 0 (
    echo üîç PMD: PASSOU
) else (
    echo üîç PMD: AVISOS
)

if %CPD_RESULT% equ 0 (
    echo üìã CPD: PASSOU
) else (
    echo üìã CPD: AVISOS
)

if %SPOTBUGS_RESULT% equ 0 (
    echo üêõ SpotBugs: PASSOU
) else (
    echo üêõ SpotBugs: AVISOS
)

if %COVERAGE_CHECK% equ 0 (
    echo üìà Cobertura: PASSOU
) else (
    echo üìà Cobertura: FALHOU
)

echo.
echo üìã Relat√≥rios dispon√≠veis em:
echo ‚Ä¢ Cobertura: target\site\jacoco\index.html
echo ‚Ä¢ CheckStyle: target\site\checkstyle.html
echo ‚Ä¢ PMD: target\site\pmd.html
echo ‚Ä¢ SpotBugs: target\site\spotbugs.html
echo ‚Ä¢ Site completo: target\site\index.html
echo ‚Ä¢ Configura√ß√µes: config\quality\

echo.
if %TESTS_RESULT% equ 0 if %COVERAGE_CHECK% equ 0 (
    echo üéâ AN√ÅLISE DE QUALIDADE CONCLU√çDA COM SUCESSO!
    exit /b 0
) else (
    echo ‚ö†Ô∏è  AN√ÅLISE CONCLU√çDA COM PROBLEMAS
    exit /b 1
)

endlocal